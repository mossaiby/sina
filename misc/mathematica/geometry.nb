(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200374,       4016]
NotebookOptionsPosition[    193315,       3933]
NotebookOutlinePosition[    193688,       3949]
CellTagsIndexPosition[    193645,       3946]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], "=", 
   RowBox[{"LegendreP", "[", 
    RowBox[{"n", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Px", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", "x"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.782734098983761*^9, 3.7827341272761526`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b309956f-b5fc-4d6c-a9a1-afb5300a99f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormatNumber", "[", "x_", "]"}], ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{"FortranForm", "[", 
    RowBox[{"N", "[", 
     RowBox[{"x", ",", "20"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783702980911357*^9, 3.7837030045066724`*^9}, {
  3.7837030759666023`*^9, 3.7837030825637913`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"fc4aac9c-ca29-43e6-a759-5bfb4a211768"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "AddTo", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddTo", "[", 
   RowBox[{
    RowBox[{"A_", "/;", 
     RowBox[{"StringQ", "[", "A", "]"}]}], ",", 
    RowBox[{"B_", "/;", 
     RowBox[{"StringQ", "[", "B", "]"}]}]}], "]"}], ":=", 
  RowBox[{"A", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"A", ",", "B"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "AddTo", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7827381204102573`*^9, 3.782738253929784*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"ed3dd092-29fd-4be8-9e2f-0986a7f7b438"],

Cell["Gauss-Legendre", "Text",
 CellChangeTimes->{{3.782734323074137*^9, 
  3.782734329312714*^9}},ExpressionUUID->"7d97e5d5-1434-4e65-9ab3-\
f2539e92f511"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "n", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"xs", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"x", "/.", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"n", ",", "x"}], "]"}], "\[Equal]", "0"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"N", "[", "#1", "]"}], "<", 
         RowBox[{"N", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ws", "=", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["#", "2"]}], ")"}], 
         SuperscriptBox[
          RowBox[{"Px", "[", 
           RowBox[{"n", ",", "#"}], "]"}], "2"]}]], "&"}], "/@", "xs"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(x\), \(i\)]\):\>\"", ",", 
      RowBox[{"FullForm", "/@", 
       RowBox[{"N", "[", "xs", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(w\), \(i\)]\):\>\"", ",", 
      RowBox[{"FullForm", "/@", 
       RowBox[{"N", "[", "ws", "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.782734095402027*^9, 3.7827340973162208`*^9}, {
   3.7827341477788563`*^9, 3.782734196150988*^9}, {3.782734227431013*^9, 
   3.7827343045093718`*^9}, {3.7827343448333592`*^9, 
   3.7827344339903746`*^9}, {3.7827344644920588`*^9, 
   3.7827345408193502`*^9}, {3.7827453408697195`*^9, 3.782745343932328*^9}, 
   3.782746777261621*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"7afcffd5-bbb2-4eb3-842c-b1148489439f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xs", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{
        RowBox[{"x", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"n", ",", "x"}], "]"}], "\[Equal]", "0"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "[", "#1", "]"}], "<", 
          RowBox[{"N", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ws", "=", 
      RowBox[{
       RowBox[{
        FractionBox["2", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["#", "2"]}], ")"}], 
          SuperscriptBox[
           RowBox[{"Px", "[", 
            RowBox[{"n", ",", "#"}], "]"}], "2"]}]], "&"}], "/@", "xs"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"code", "+=", 
      RowBox[{"\"\<sina::kernel::scalar_t gauss_legendre_points_\>\"", "<>", 
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<[] = { \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"code", "+=", 
        RowBox[{
         RowBox[{"FormatNumber", "[", 
          RowBox[{
          "xs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
          "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", 
            RowBox[{"Length", "[", "xs", "]"}]}], ",", "\"\<\>\"", ",", 
           "\"\<, \>\""}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "xs", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"code", "+=", 
      RowBox[{
      "\"\< };\\nsina::kernel::scalar_t gauss_legendre_weights_\>\"", "<>", 
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<[] = { \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"code", "+=", 
        RowBox[{
         RowBox[{"FormatNumber", "[", 
          RowBox[{
          "ws", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
          "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", 
            RowBox[{"Length", "[", "ws", "]"}]}], ",", "\"\<\>\"", ",", 
           "\"\<, \>\""}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "ws", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"code", "+=", "\"\< };\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.782734095402027*^9, 3.7827340973162208`*^9}, {
   3.7827341477788563`*^9, 3.782734196150988*^9}, {3.782734227431013*^9, 
   3.7827343045093718`*^9}, {3.7827343448333592`*^9, 
   3.7827344339903746`*^9}, {3.7827344644920588`*^9, 
   3.7827345408193502`*^9}, {3.782737852335075*^9, 3.7827379223774867`*^9}, {
   3.782738060607792*^9, 3.782738076305622*^9}, {3.782738298569001*^9, 
   3.7827384013646116`*^9}, {3.782740174580907*^9, 3.782740475513939*^9}, {
   3.782740539125492*^9, 3.782740551816037*^9}, {3.78274058980243*^9, 
   3.782740597520617*^9}, {3.7827407080820694`*^9, 3.782740712204362*^9}, 
   3.7827407445899887`*^9, {3.7827408492312994`*^9, 3.7827408536173105`*^9}, {
   3.78274090127172*^9, 3.7827409257103825`*^9}, {3.7827410292100525`*^9, 
   3.782741070400359*^9}, {3.782741216483789*^9, 3.782741227956525*^9}, {
   3.7827412632323437`*^9, 3.7827412636653233`*^9}, {3.782741540164324*^9, 
   3.7827415403052397`*^9}, {3.782743264181746*^9, 3.782743301044121*^9}, {
   3.7836147213347683`*^9, 3.7836148805362115`*^9}, {3.783614916079033*^9, 
   3.7836150542265396`*^9}, {3.7836152028178606`*^9, 
   3.7836152030188646`*^9}, {3.7836152331774006`*^9, 3.783615405566223*^9}, {
   3.783615444982289*^9, 3.7836154652067437`*^9}, 3.7836976736160297`*^9, {
   3.7836978083755937`*^9, 3.783697811919241*^9}, {3.783697873280362*^9, 
   3.78369787816154*^9}, {3.7837014794002233`*^9, 3.7837014848673162`*^9}, 
   3.7837019288882227`*^9, {3.7837031107016673`*^9, 3.783703126552251*^9}, {
   3.7837031568427763`*^9, 3.7837031635430827`*^9}, 3.783703196042992*^9, {
   3.7837575581175995`*^9, 3.783757562971326*^9}, {3.783757914925546*^9, 
   3.783757918095865*^9}},ExpressionUUID->"532b4cd1-f02e-41f5-abac-\
44001f807c3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\\n      points = \
sina::kernel::matrix(sina::kernel::detail::gauss_legendre_points_\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, 1);\\n      weights = \
sina::kernel::vector(sina::kernel::detail::gauss_legendre_weights_\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<);\\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"f3b55b89-71c9-4836-83c2-83cf6086dfef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::quadrilateral, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\n      if (sina::kernel::quadrature::gauss_legendre_points_quadrilateral[\
\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", 
      "\"\<].empty())\\n      {\\n        sina::kernel::matrix points_1d;\\n  \
      sina::kernel::vector weights_1d;\\n        \n        \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points_1d, weights_1d);\\n        \
sina::kernel::quadrature::build_gauss_legendre_quadrilateral_points(\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, points_1d, weights_1d);\\n      }\\n\n      points = \
sina::kernel::matrix(sina::kernel::quadrature::gauss_legendre_points_\
quadrilateral[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "2"], "]"}], "<>", 
      "\"\<, 2);\\n      weights = \
sina::kernel::vector(sina::kernel::quadrature::gauss_legendre_weights_\
quadrilateral[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "2"], "]"}], "<>", "\"\<);\\n    }\\n\\n\>\""}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}, {
   3.7839683975164824`*^9, 3.7839685952904434`*^9}, {3.7839697939180994`*^9, 
   3.783969794396135*^9}, {3.783970441727414*^9, 3.783970449123251*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"ec388a52-0da0-4640-9af2-09dccf376337"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::brick, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\n      if (sina::kernel::quadrature::gauss_legendre_points_brick[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", 
      "\"\<].empty())\\n      {\\n        sina::kernel::matrix points_1d;\\n  \
      sina::kernel::vector weights_1d;\\n        \n        \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points_1d, weights_1d);\\n        \
sina::kernel::quadrature::build_gauss_legendre_brick_points(\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, points_1d, weights_1d);\\n      }\\n\n      points = \
sina::kernel::matrix(sina::kernel::quadrature::gauss_legendre_points_brick[\>\
\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "3"], "]"}], "<>", 
      "\"\<, 3);\\n      weights = \
sina::kernel::vector(sina::kernel::quadrature::gauss_legendre_weights_brick[\>\
\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "3"], "]"}], "<>", "\"\<);\\n    }\\n\\n\>\""}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}, {
   3.7839683975164824`*^9, 3.7839685952904434`*^9}, {3.7839697939180994`*^9, 
   3.783969794396135*^9}, {3.783970441727414*^9, 3.783970449123251*^9}, {
   3.783972149872077*^9, 3.7839721607921376`*^9}, {3.7839722051184497`*^9, 
   3.783972223798353*^9}, 3.7839722643122253`*^9, 3.7839725913328753`*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"465c69ec-2ab5-4785-a818-1460ff24bca4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"5527f356-9add-47a7-97d3-d9af51c70f46"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::quadrilateral, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9, {
   3.7847082007399225`*^9, 3.784708207553869*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f8337b2e-45bc-45e0-9db8-03b200bef2fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_legendre,\
 sina::kernel::quadrature_geometry_t::brick, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9, {
   3.7847082007399225`*^9, 3.784708207553869*^9}, {3.78471078567044*^9, 
   3.7847107865238028`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"759cff5b-d1af-4504-a36f-07020526fa62"],

Cell["Gauss-Lobatto", "Text",
 CellChangeTimes->{{3.782735848072219*^9, 
  3.782735853386585*^9}},ExpressionUUID->"ad1a3d72-9acf-4ac5-9828-\
cd2beb5ea004"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "n", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"xs", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"x", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"Px", "[", 
               RowBox[{
                RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], "\[Equal]", "0"}],
              "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"N", "[", "#1", "]"}], "<", 
           RowBox[{"N", "[", "#2", "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ws", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
         FractionBox["2", 
          RowBox[{"n", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}]], ",", 
         FractionBox["2", 
          RowBox[{"n", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], 
           SuperscriptBox[
            RowBox[{"P", "[", 
             RowBox[{
              RowBox[{"n", "-", "1"}], ",", "#"}], "]"}], "2"]}]]}], "]"}], 
       "&"}], "/@", "xs"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(x\), \(i\)]\):\>\"", ",", 
      RowBox[{"FullForm", "/@", 
       RowBox[{"N", "[", "xs", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(w\), \(i\)]\):\>\"", ",", 
      RowBox[{"FullForm", "/@", 
       RowBox[{"N", "[", "ws", "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.782734095402027*^9, 3.7827340973162208`*^9}, {
   3.7827341477788563`*^9, 3.782734196150988*^9}, {3.782734227431013*^9, 
   3.7827343045093718`*^9}, {3.7827343448333592`*^9, 
   3.7827344339903746`*^9}, {3.7827344644920588`*^9, 
   3.7827345408193502`*^9}, {3.7827359148870015`*^9, 3.782735934557871*^9}, {
   3.782735971977746*^9, 3.782735978392496*^9}, {3.782736020853855*^9, 
   3.782736086602621*^9}, {3.7827452760279045`*^9, 3.782745282427249*^9}, {
   3.782745355479539*^9, 3.782745356546488*^9}, 3.782745801281292*^9, {
   3.782745850923769*^9, 3.7827459002709484`*^9}, 3.782746552902852*^9, 
   3.782746665266817*^9, {3.782746735840372*^9, 
   3.7827467635123434`*^9}},ExpressionUUID->"f58a4683-a6c1-4e26-abb5-\
371e6740034d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xs", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"x", "/.", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"Px", "[", 
                RowBox[{
                 RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], "\[Equal]", 
               "0"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"N", "[", "#1", "]"}], "<", 
            RowBox[{"N", "[", "#2", "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ws", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
          FractionBox["2", 
           RowBox[{"n", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}]], ",", 
          FractionBox["2", 
           RowBox[{"n", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], 
            SuperscriptBox[
             RowBox[{"P", "[", 
              RowBox[{
               RowBox[{"n", "-", "1"}], ",", "#"}], "]"}], "2"]}]]}], "]"}], 
        "&"}], "/@", "xs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"code", "+=", 
      RowBox[{"\"\<sina::kernel::scalar_t gauss_lobatto_points_\>\"", "<>", 
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<[] = { \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"code", "+=", 
        RowBox[{
         RowBox[{"FormatNumber", "[", 
          RowBox[{
          "xs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
          "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", 
            RowBox[{"Length", "[", "xs", "]"}]}], ",", "\"\<\>\"", ",", 
           "\"\<, \>\""}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "xs", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"code", "+=", 
      RowBox[{"\"\< };\\nsina::kernel::scalar_t gauss_lobatto_weights_\>\"", "<>", 
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<[] = { \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"code", "+=", 
        RowBox[{
         RowBox[{"FormatNumber", "[", 
          RowBox[{
          "ws", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
          "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", 
            RowBox[{"Length", "[", "ws", "]"}]}], ",", "\"\<\>\"", ",", 
           "\"\<, \>\""}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "ws", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"code", "+=", "\"\< };\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.782734095402027*^9, 3.7827340973162208`*^9}, {
   3.7827341477788563`*^9, 3.782734196150988*^9}, {3.782734227431013*^9, 
   3.7827343045093718`*^9}, {3.7827343448333592`*^9, 
   3.7827344339903746`*^9}, {3.7827344644920588`*^9, 
   3.7827345408193502`*^9}, {3.782737852335075*^9, 3.7827379223774867`*^9}, {
   3.782738060607792*^9, 3.782738076305622*^9}, {3.782738298569001*^9, 
   3.7827384013646116`*^9}, {3.782740174580907*^9, 3.782740475513939*^9}, {
   3.782740539125492*^9, 3.782740551816037*^9}, {3.78274058980243*^9, 
   3.782740597520617*^9}, {3.7827407080820694`*^9, 3.782740712204362*^9}, 
   3.7827407445899887`*^9, {3.7827408492312994`*^9, 3.7827408536173105`*^9}, {
   3.78274090127172*^9, 3.7827409257103825`*^9}, {3.7827410292100525`*^9, 
   3.782741070400359*^9}, {3.782741216483789*^9, 3.782741227956525*^9}, {
   3.7827412632323437`*^9, 3.7827412636653233`*^9}, {3.782741540164324*^9, 
   3.7827415403052397`*^9}, {3.782743264181746*^9, 3.782743301044121*^9}, {
   3.7836147213347683`*^9, 3.7836148805362115`*^9}, {3.783614916079033*^9, 
   3.7836150542265396`*^9}, {3.7836152028178606`*^9, 
   3.7836152030188646`*^9}, {3.7836152331774006`*^9, 3.783615405566223*^9}, {
   3.783615444982289*^9, 3.7836154652067437`*^9}, 3.7836976736160297`*^9, {
   3.7836978083755937`*^9, 3.783697811919241*^9}, {3.783697873280362*^9, 
   3.78369787816154*^9}, {3.7837014794002233`*^9, 3.7837014848673162`*^9}, 
   3.7837019288882227`*^9, {3.7837031107016673`*^9, 3.783703126552251*^9}, {
   3.7837031568427763`*^9, 3.7837031635430827`*^9}, 3.783703196042992*^9, {
   3.7837575581175995`*^9, 3.783757562971326*^9}, {3.783757914925546*^9, 
   3.783757918095865*^9}, {3.783757959487277*^9, 3.7837579948669715`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"41052f91-03db-4dc0-8dca-85dbdf2236ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\\n      points = \
sina::kernel::matrix(sina::kernel::detail::gauss_lobatto_points_\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, 1);\\n      weights = \
sina::kernel::vector(sina::kernel::detail::gauss_lobatto_weights_\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<);\\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}, {
   3.7839312154321856`*^9, 3.78393124605103*^9}, {3.783970404981675*^9, 
   3.7839704054219007`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"7d4bc76a-d5d5-4c3b-843f-0c176250a907"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::quadrilateral, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\n      if \
(sina::kernel::quadrature::gauss_lobatto_points_quadrilateral[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", 
      "\"\<].empty())\\n      {\\n        sina::kernel::matrix points_1d;\\n  \
      sina::kernel::vector weights_1d;\\n        \n        \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points_1d, weights_1d);\\n        \
sina::kernel::quadrature::build_gauss_lobatto_quadrilateral_points(\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, points_1d, weights_1d);\\n      }\\n\n      points = \
sina::kernel::matrix(sina::kernel::quadrature::gauss_lobatto_points_\
quadrilateral[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "2"], "]"}], "<>", 
      "\"\<, 2);\\n      weights = \
sina::kernel::vector(sina::kernel::quadrature::gauss_lobatto_weights_\
quadrilateral[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "2"], "]"}], "<>", "\"\<);\\n    }\\n\\n\>\""}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}, {
   3.7839683975164824`*^9, 3.7839685952904434`*^9}, {3.7839697939180994`*^9, 
   3.783969794396135*^9}, {3.7839699289207926`*^9, 3.7839700515828195`*^9}, 
   3.783970098453101*^9, {3.7839703670274563`*^9, 3.783970375591989*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a3a47de3-4564-459b-92f9-1f883d6b1f76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::brick, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(sina::kernel::matrix &points, sina::kernel::vector &weights)\\n  \
  {\n      if (sina::kernel::quadrature::gauss_lobatto_points_brick[\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", 
      "\"\<].empty())\\n      {\\n        sina::kernel::matrix points_1d;\\n  \
      sina::kernel::vector weights_1d;\\n        \n        \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points_1d, weights_1d);\\n        \
sina::kernel::quadrature::build_gauss_lobatto_brick_points(\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, points_1d, weights_1d);\\n      }\\n\n      points = \
sina::kernel::matrix(sina::kernel::quadrature::gauss_lobatto_points_brick[\>\"\
", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "3"], "]"}], "<>", 
      "\"\<, 3);\\n      weights = \
sina::kernel::vector(sina::kernel::quadrature::gauss_lobatto_weights_brick[\>\
\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "<>", "\"\<].data(), \>\"", "<>", 
      RowBox[{"ToString", "[", 
       SuperscriptBox["n", "3"], "]"}], "<>", "\"\<);\\n    }\\n\\n\>\""}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.7839304970115614`*^9, 3.7839306812037277`*^9}, {
   3.783930859027261*^9, 3.783930868253493*^9}, {3.7839309026695433`*^9, 
   3.7839309229604006`*^9}, 3.7839309821534643`*^9, {3.783931051850519*^9, 
   3.783931052992448*^9}, {3.7839310851172237`*^9, 3.783931107493861*^9}, {
   3.7839683975164824`*^9, 3.7839685952904434`*^9}, {3.7839697939180994`*^9, 
   3.783969794396135*^9}, {3.7839699289207926`*^9, 3.7839700515828195`*^9}, 
   3.783970098453101*^9, {3.7839703670274563`*^9, 3.783970375591989*^9}, {
   3.7839723908489304`*^9, 3.7839724348564973`*^9}, {3.7839725046601458`*^9, 
   3.7839725066773386`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"3cfcefce-ce9f-4227-9d45-47ee435c10fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::bar, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9, {
   3.7847058760742693`*^9, 3.7847058864383307`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c4f8b269-56f4-4a71-9830-157dbc8a4438"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::quadrilateral, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9, {
   3.7847082007399225`*^9, 3.784708207553869*^9}, {3.78471066522581*^9, 
   3.78471067095923*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"5cf3a238-76f4-4038-8edc-23b101fdcfe9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{"\"\<case \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<:\\n\\n  \
sina::kernel::quadrature::get<sina::kernel::quadrature_type_t::gauss_lobatto, \
sina::kernel::quadrature_geometry_t::brick, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>(points, weights);\\n  break;\\n\\n\>\""}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.784703472693203*^9, 3.784703567868759*^9}, {
   3.7847036170376935`*^9, 3.7847036425057745`*^9}, 3.7847051505034027`*^9, {
   3.7847082007399225`*^9, 3.784708207553869*^9}, {3.78471066522581*^9, 
   3.78471067095923*^9}, {3.784710769187455*^9, 3.78471077025393*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"18e8d11d-bb39-4ad0-9d3e-3b1501865d09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LagrangeUniform", "[", 
   RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[Xi]s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Xi]s", "=", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        FractionBox["2", "n"]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      SubsuperscriptBox["\[Product]", 
       RowBox[{"j", "=", "1"}], 
       RowBox[{"n", "+", "1"}]], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "j"}], ",", "1", ",", 
        FractionBox[
         RowBox[{"x", "-", 
          SubscriptBox["\[Xi]s", 
           RowBox[{"\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]]}], 
         RowBox[{
          SubscriptBox["\[Xi]s", 
           RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
          "-", 
          SubscriptBox["\[Xi]s", 
           RowBox[{
           "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]]}]]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.563467389552516*^9, 3.563467652662578*^9}, {
   3.5634677424563355`*^9, 3.5634678155424643`*^9}, {3.783576192796358*^9, 
   3.7835761945682144`*^9}, {3.7836141948209314`*^9, 3.7836142539816246`*^9}, 
   3.783616238133614*^9, 3.7836203902957463`*^9, {3.783621245177179*^9, 
   3.783621251678709*^9}, 3.7836212975863924`*^9, {3.7836213451501555`*^9, 
   3.7836213496510687`*^9}, {3.783621405665025*^9, 3.7836214190398245`*^9}, 
   3.7836214553767056`*^9, 3.783621625693416*^9, {3.7851388586943655`*^9, 
   3.785138906390625*^9}, 3.78513896033025*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"2ae515a1-a793-42e4-80e8-071655c37f34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LagrangeGLL", "[", 
   RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[Xi]s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Xi]s", "=", 
      RowBox[{"xs", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "\[Equal]", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"x", "/.", 
              RowBox[{"Solve", "[", 
               RowBox[{
                RowBox[{"Px", "[", 
                 RowBox[{"n", ",", "x"}], "]"}], "\[Equal]", "0"}], "]"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "[", "#1", "]"}], "<", 
             RowBox[{"N", "[", "#2", "]"}]}], "&"}]}], "]"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      SubsuperscriptBox["\[Product]", 
       RowBox[{"j", "=", "1"}], 
       RowBox[{"n", "+", "1"}]], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "j"}], ",", "1", ",", 
        FractionBox[
         RowBox[{"x", "-", 
          SubscriptBox["\[Xi]s", 
           RowBox[{"\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]]}], 
         RowBox[{
          SubscriptBox["\[Xi]s", 
           RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
          "-", 
          SubscriptBox["\[Xi]s", 
           RowBox[{
           "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]]}]]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.563467389552516*^9, 3.563467652662578*^9}, {
   3.5634677424563355`*^9, 3.5634678155424643`*^9}, {3.783576192796358*^9, 
   3.7835761945682144`*^9}, {3.7836141948209314`*^9, 3.7836142539816246`*^9}, 
   3.783616238133614*^9, 3.7836203902957463`*^9, {3.783621245177179*^9, 
   3.783621251678709*^9}, 3.7836212975863924`*^9, {3.7836213451501555`*^9, 
   3.7836213496510687`*^9}, {3.783621405665025*^9, 3.7836214190398245`*^9}, 
   3.7836214553767056`*^9, 3.783621625693416*^9, {3.7851388443458138`*^9, 
   3.7851388474256563`*^9}, {3.78513889732748*^9, 3.7851389088140464`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"71450c14-14e0-40a9-bc9d-a397676c43c6"],

Cell["1D", "Text",
 CellChangeTimes->{{3.7857344957143664`*^9, 
  3.7857344975330524`*^9}},ExpressionUUID->"1f9fc075-8733-40dc-9937-\
045917aefca2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"LagrangeUniform", "[", 
               RowBox[{"i", ",", "n"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"c709969e-200f-4233-928a-e800a99929aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"LagrangeGLL", "[", 
               RowBox[{"i", ",", "n"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785237197776186*^9, 3.7852372218573303`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"d5a0b372-845c-4b5f-95d2-c8fae8914bb1"],

Cell["1st derivative", "Text",
 CellChangeTimes->{{3.7852595250159135`*^9, 
  3.785259529189702*^9}},ExpressionUUID->"7952edfa-22e9-4e6d-9898-\
ff4b6cb92281"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"LagrangeUniform", "[", 
                 RowBox[{"i", ",", "n"}], "]"}], ",", "x"}], "]"}], "]"}], 
             "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.7852595433739147`*^9, 3.785259574249978*^9}, 
   3.7856724758431406`*^9},ExpressionUUID->"91aae395-ebb7-47d0-8479-\
50739627a920"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"LagrangeGLL", "[", 
                 RowBox[{"i", ",", "n"}], "]"}], ",", "x"}], "]"}], "]"}], 
             "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785237197776186*^9, 3.7852372218573303`*^9}, {3.7852595547893934`*^9, 
   3.78525955529132*^9}, {3.785259699887561*^9, 3.785259703851185*^9}, {
   3.7856724851758747`*^9, 
   3.7856724853415504`*^9}},ExpressionUUID->"76ddb790-c891-4dc9-b43e-\
c4a909aa16dd"],

Cell["2nd derivative", "Text",
 CellChangeTimes->{{3.7852595250159135`*^9, 3.785259529189702*^9}, {
  3.7852599854445567`*^9, 
  3.785259986161478*^9}},ExpressionUUID->"e49ef161-d198-4bad-9205-\
a32579d90ac4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"LagrangeUniform", "[", 
                 RowBox[{"i", ",", "n"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], "]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.7852595433739147`*^9, 3.785259574249978*^9}, {3.7852599921741376`*^9, 
   3.7852599944381714`*^9}, 3.7852600330022945`*^9, {3.7856724947590804`*^9, 
   3.7856724949595213`*^9}},ExpressionUUID->"bfbfc1c5-ca73-40f2-bf4b-\
1ea0d460434f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"code", "+=", 
     RowBox[{
     "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\\n    {\\n      \
sina::kernel::scalar_t x = p[0];\\n      s.resize(\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "<>", "\"\<);\\n\\n\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"code", "+=", 
       RowBox[{"\"\<      s[\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"StringReplace", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"N", "[", 
             RowBox[{"HornerForm", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"LagrangeGLL", "[", 
                 RowBox[{"i", ",", "n"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], "]"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<*\>\"", "\[Rule]", "\"\< * \>\""}], ",", 
            RowBox[{"\"\<Power(x,2)\>\"", "\[Rule]", "\"\<x * x\>\""}], ",", 
            RowBox[{"\"\<1.*\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], "]"}], 
        "<>", "\"\<;\\n\>\""}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "+", "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"code", "+=", "\"\<    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785237197776186*^9, 3.7852372218573303`*^9}, {3.7852595547893934`*^9, 
   3.78525955529132*^9}, {3.785259699887561*^9, 3.785259703851185*^9}, {
   3.785260124735545*^9, 3.785260132947864*^9}, {3.7856724984399858`*^9, 
   3.7856724986403723`*^9}},ExpressionUUID->"8baeba03-1db5-4a33-bbf8-\
423d6a5e5371"],

Cell["2D", "Text",
 CellChangeTimes->{{3.7856725150184164`*^9, 
  3.785672515788926*^9}},ExpressionUUID->"4534def2-5954-4ee2-8c5e-\
039990b45051"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 
   3.785672577220869*^9}},ExpressionUUID->"1804ae7b-f158-451c-a639-\
50f6ce16703d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, {
   3.7857345679072137`*^9, 3.7857345760047054`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e23780d9-3d52-4473-bcd5-2ce0b2d29971"],

Cell["1st derivative", "Text",
 CellChangeTimes->{{3.7857345543162684`*^9, 
  3.7857345588396435`*^9}},ExpressionUUID->"7cba9324-9b35-47e8-b4e0-\
1d53b3dd79d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856726090319166`*^9, 
   3.785672609233836*^9}},ExpressionUUID->"6875a28c-07ae-4d4d-9bc3-\
323a5e243ffe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856726090319166`*^9, 3.785672609233836*^9}, {3.7857348162116094`*^9, 
   3.7857348239942274`*^9}},ExpressionUUID->"97a8629e-c605-4f85-aacd-\
167e3a3a2606"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856726090319166`*^9, 3.785672609233836*^9}, {3.7857349916895704`*^9, 
   3.7857349973023973`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"52c7abdf-d081-4872-9f0e-286f2980a417"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856726090319166`*^9, 3.785672609233836*^9}, {3.7857348162116094`*^9, 
   3.7857348239942274`*^9}, {3.7857349782138176`*^9, 3.785734987922269*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0030af93-5ce1-4e79-87c0-3238a0f51466"],

Cell["2nd", "Text",
 CellChangeTimes->{{3.7857349593228416`*^9, 
  3.785734960171354*^9}},ExpressionUUID->"6873e7fe-9e1b-4689-9160-\
161d79ba7153"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856439650775857`*^9, 3.785643971439969*^9}, 
   3.785735302914795*^9},ExpressionUUID->"b191f54f-e117-4cda-87b6-\
d880017900b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785643770521693*^9, 3.7856437817400627`*^9}, {
   3.785672617606515*^9, 
   3.7856726239966507`*^9}},ExpressionUUID->"ad05f08b-59a9-4d33-8647-\
d83cf5cdeb19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_2>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785643770521693*^9, 3.7856437817400627`*^9}, {
   3.7856440080595636`*^9, 3.7856440110643077`*^9}, {3.785671453902234*^9, 
   3.7856714688343596`*^9}, {3.7857353250178814`*^9, 
   3.785735333287075*^9}},ExpressionUUID->"062639db-fcba-44f1-9f7f-\
1ac583f356d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2_0>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.7856437403549423`*^9, 3.785643752648936*^9}, {
   3.7856439650775857`*^9, 3.785643971439969*^9}, 3.785735302914795*^9, {
   3.7857353988787713`*^9, 3.78573540318533*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"71c05522-cf0d-40cd-bf28-ffa7b02007e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_1>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785643770521693*^9, 3.7856437817400627`*^9}, {
   3.785672617606515*^9, 3.7856726239966507`*^9}, {3.7857353917002687`*^9, 
   3.7857353959087152`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"a1f70985-b5b5-4baa-82b7-2c0319aebb15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::quadrilateral, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_2>(const \
sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n\n      sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_1, \
s_1);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          s[n++] = s_0[i] * s_1[j];\n        }\n \
     }\n    }\\n\\n\>\""}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785643770521693*^9, 3.7856437817400627`*^9}, {
   3.7856440080595636`*^9, 3.7856440110643077`*^9}, {3.785671453902234*^9, 
   3.7856714688343596`*^9}, {3.7857353250178814`*^9, 3.785735333287075*^9}, {
   3.78573537623606*^9, 3.7857353861916113`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2515a265-a888-4d36-97c1-c9e9724a050d"],

Cell["3D", "Text",
 CellChangeTimes->{{3.785742465513403*^9, 
  3.785742466500476*^9}},ExpressionUUID->"2da9d9aa-c8b4-4f73-bb1a-\
7643c756ee4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b301fb05-d5fc-474d-b4f0-d8bfb0665086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.785777679132045*^9, 3.785777691356679*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4cfa28a3-a20b-4fa8-bde2-d29902399eab"],

Cell["1st derivative", "Text",
 CellChangeTimes->{{3.7857345543162684`*^9, 
  3.7857345588396435`*^9}},ExpressionUUID->"f4efdede-bb90-4c5e-ad48-\
40f23147dcb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 3.7857778237612457`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c723fd6a-02dd-4117-bec9-c6f3d1d13764"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.785777862664666*^9, 3.785777871794803*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"c4be4ecc-0068-400b-acf1-e74511b0d49e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.785777862664666*^9, 3.7857779070055723`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"18abf51b-e55d-4874-b847-f496a6a97a53"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857783153638783`*^9, 3.785778328052724*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"7156f778-9cc2-41bd-b2ec-747e5304295c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.785777862664666*^9, 3.785777871794803*^9}, {
   3.785778333544713*^9, 3.7857783405250854`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"62b6c7dc-fe76-4155-ab3f-ca76875d5f5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.785777862664666*^9, 3.7857779070055723`*^9}, {
   3.785778346542237*^9, 3.7857783536177497`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"8d9665f7-fbdc-4359-9054-e6ddae42284c"],

Cell["2nd", "Text",
 CellChangeTimes->{{3.7857786438354244`*^9, 
  3.7857786450388994`*^9}},ExpressionUUID->"7f9f00e7-7af9-4551-a543-\
0e7df8618346"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 3.7857787023873014`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"4884657e-713a-45e8-8d1c-cce4aa316756"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_2_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.785778781026495*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"06ecc210-457c-48aa-a0fc-678020b34317"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_2>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"626d1df7-8927-417c-9018-6c30e04ec05b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.785778874318228*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"f4fbf756-f266-415d-af6d-0eb6dec59007"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.7857789119558544`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c13f0503-0109-48dc-a1fb-036f598425d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_1_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_uniform, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.785778947963953*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"9fca9a94-75f1-45b1-8623-4f94d5a296b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2_0_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785779012354127*^9, 3.785779025677905*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"b6841918-2680-4431-9467-7309f927bb6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_2_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.785778781026495*^9}, {
   3.785779034782178*^9, 3.7857790410791225`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"553a060a-6fa2-4af0-9eb6-02aba8f3d9c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_0_2>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_2>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857790451563168`*^9, 3.785779051115182*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"19c88b5e-af2a-474e-bcfc-1937bf370849"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0_1_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.785778874318228*^9}, {3.7857790564369593`*^9, 
   3.7857790610346575`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"e487d520-cc9a-42c4-a8e1-9e3fdcc71a0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_0_1>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.7857789119558544`*^9}, {3.7857790655020227`*^9, 
   3.7857790708324223`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"2942cf5e-34bf-4872-a557-c9b32baa9db1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"code", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"code", "+=", 
    RowBox[{
    "\"\<    template <> void \
sina::kernel::geometry::get<sina::kernel::geometry_t::brick, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1_1_0>(\
const sina::kernel::vector &p, sina::kernel::vector &s)\n    {\n      \
sina::kernel::vector p_0(&p[0], 1);\n      sina::kernel::vector p_1(&p[1], \
1);\n      sina::kernel::vector p_2(&p[2], 1);\n\n      \
sina::kernel::scalar_t sd_0[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_1[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n      sina::kernel::scalar_t sd_2[\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<];\n\n      sina::kernel::vector s_0(sd_0, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_1(sd_1, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n      sina::kernel::vector s_2(sd_2, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<);\n\n      \
sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_0, \
s_0);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_1>(p_1, \
s_1);\n      sina::kernel::geometry::get<sina::kernel::geometry_t::bar, \
sina::kernel::shape_function_t::lagrange_gll, \>\"", "<>", 
     RowBox[{"ToString", "[", "n", "]"}], "<>", 
     "\"\<, sina::kernel::shape_function_derivative_t::derivative_0>(p_2, \
s_2);\n\n      s.resize(\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}], "<>", 
     "\"\<);\n\n      sina::kernel::index_t n = 0;\n      for \
(sina::kernel::index_t i = 0; i < \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; i++)\n      {\n        for (sina::kernel::index_t j = 0; j < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; j++)\n        {\n          for (sina::kernel::index_t k = 0; k < \
\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "<>", 
     "\"\<; k++)\n          {\n            s[n++] = s_0[i] * s_1[j] * s_2[k];\
\n          }\n        }\n      }\n    }\\n\\n\>\""}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "code"}], "Input",
 CellChangeTimes->{{3.783616317402553*^9, 3.7836164026416035`*^9}, {
   3.7836214962914667`*^9, 3.7836215519743185`*^9}, {3.7836215828650017`*^9, 
   3.7836215829904556`*^9}, {3.783621693504361*^9, 3.7836217165981884`*^9}, {
   3.7836217471902633`*^9, 3.7836219243747725`*^9}, {3.78362221861033*^9, 
   3.7836223199800344`*^9}, 3.7836224132073183`*^9, {3.783622550273906*^9, 
   3.7836225867780128`*^9}, {3.785172483212163*^9, 3.785172489210639*^9}, 
   3.7851725338503704`*^9, {3.7851725663019447`*^9, 3.785172654200864*^9}, {
   3.785172725770287*^9, 3.7851727394107*^9}, {3.7851732643160615`*^9, 
   3.7851732645850267`*^9}, {3.785229595192277*^9, 3.7852296619089184`*^9}, {
   3.785632505610401*^9, 3.785632612687292*^9}, {3.785632647901048*^9, 
   3.785632661671094*^9}, {3.785672576751162*^9, 3.785672577220869*^9}, 
   3.7857770793608427`*^9, {3.7857771152701955`*^9, 3.7857771849668193`*^9}, {
   3.7857772360035715`*^9, 3.785777238442362*^9}, {3.785777536647483*^9, 
   3.7857775440054836`*^9}, {3.7857778068791647`*^9, 
   3.7857778237612457`*^9}, {3.7857786936944036`*^9, 
   3.7857787023873014`*^9}, {3.785778773590355*^9, 3.7857788199398317`*^9}, {
   3.7857788554810925`*^9, 3.785778947963953*^9}, {3.7857790769058723`*^9, 
   3.7857790817903414`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"57d5d4e0-f2ac-4d3e-90fb-7075a75e7934"]
},
WindowSize->{1600, 817},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 571, 16, 73, "Input",ExpressionUUID->"b309956f-b5fc-4d6c-a9a1-afb5300a99f7"],
Cell[1132, 38, 421, 9, 43, "Input",ExpressionUUID->"fc4aac9c-ca29-43e6-a759-5bfb4a211768"],
Cell[1556, 49, 637, 16, 102, "Input",ExpressionUUID->"ed3dd092-29fd-4be8-9e2f-0986a7f7b438"],
Cell[2196, 67, 156, 3, 47, "Text",ExpressionUUID->"7d97e5d5-1434-4e65-9ab3-f2539e92f511"],
Cell[2355, 72, 1865, 46, 320, "Input",ExpressionUUID->"7afcffd5-bbb2-4eb3-842c-b1148489439f"],
Cell[4223, 120, 4570, 104, 439, "Input",ExpressionUUID->"532b4cd1-f02e-41f5-abac-44001f807c3c"],
Cell[8796, 226, 1541, 29, 363, "Input",ExpressionUUID->"f3b55b89-71c9-4836-83c2-83cf6086dfef"],
Cell[10340, 257, 2596, 49, 590, "Input",ExpressionUUID->"ec388a52-0da0-4640-9af2-09dccf376337"],
Cell[12939, 308, 2706, 50, 561, "Input",ExpressionUUID->"465c69ec-2ab5-4785-a818-1460ff24bca4"],
Cell[15648, 360, 937, 20, 247, "Input",ExpressionUUID->"5527f356-9add-47a7-97d3-d9af51c70f46"],
Cell[16588, 382, 999, 21, 247, "Input",ExpressionUUID->"f8337b2e-45bc-45e0-9db8-03b200bef2fc"],
Cell[17590, 405, 1042, 22, 247, "Input",ExpressionUUID->"759cff5b-d1af-4504-a36f-07020526fa62"],
Cell[18635, 429, 155, 3, 52, "Text",ExpressionUUID->"ad1a3d72-9acf-4ac5-9828-cd2beb5ea004"],
Cell[18793, 434, 2925, 73, 313, "Input",ExpressionUUID->"f58a4683-a6c1-4e26-abb5-371e6740034d"],
Cell[21721, 509, 5387, 124, 432, "Input",ExpressionUUID->"41052f91-03db-4dc0-8dca-85dbdf2236ad"],
Cell[27111, 635, 1652, 31, 363, "Input",ExpressionUUID->"7d4bc76a-d5d5-4c3b-843f-0c176250a907"],
Cell[28766, 668, 2679, 50, 561, "Input",ExpressionUUID->"a3a47de3-4564-459b-92f9-1f883d6b1f76"],
Cell[31448, 720, 2745, 51, 561, "Input",ExpressionUUID->"3cfcefce-ce9f-4227-9d45-47ee435c10fa"],
Cell[34196, 773, 1001, 21, 247, "Input",ExpressionUUID->"c4f8b269-56f4-4a71-9830-157dbc8a4438"],
Cell[35200, 796, 1057, 22, 247, "Input",ExpressionUUID->"5cf3a238-76f4-4038-8edc-23b101fdcfe9"],
Cell[36260, 820, 1094, 22, 247, "Input",ExpressionUUID->"18e8d11d-bb39-4ad0-9d3e-3b1501865d09"],
Cell[37357, 844, 1792, 40, 261, "Input",ExpressionUUID->"2ae515a1-a793-42e4-80e8-071655c37f34"],
Cell[39152, 886, 2522, 61, 230, "Input",ExpressionUUID->"71450c14-14e0-40a9-bc9d-a397676c43c6"],
Cell[41677, 949, 148, 3, 52, "Text",ExpressionUUID->"1f9fc075-8733-40dc-9937-045917aefca2"],
Cell[41828, 954, 2762, 57, 479, "Input",ExpressionUUID->"c709969e-200f-4233-928a-e800a99929aa"],
Cell[44593, 1013, 2806, 58, 479, "Input",ExpressionUUID->"d5a0b372-845c-4b5f-95d2-c8fae8914bb1"],
Cell[47402, 1073, 158, 3, 52, "Text",ExpressionUUID->"7952edfa-22e9-4e6d-9898-ff4b6cb92281"],
Cell[47563, 1078, 2903, 61, 479, "Input",ExpressionUUID->"91aae395-ebb7-47d0-8479-50739627a920"],
Cell[50469, 1141, 3022, 63, 479, "Input",ExpressionUUID->"76ddb790-c891-4dc9-b43e-c4a909aa16dd"],
Cell[53494, 1206, 209, 4, 52, "Text",ExpressionUUID->"e49ef161-d198-4bad-9205-a32579d90ac4"],
Cell[53706, 1212, 3080, 64, 508, "Input",ExpressionUUID->"bfbfc1c5-ca73-40f2-bf4b-1ea0d460434f"],
Cell[56789, 1278, 3141, 65, 508, "Input",ExpressionUUID->"8baeba03-1db5-4a33-bbf8-423d6a5e5371"],
Cell[59933, 1345, 146, 3, 52, "Text",ExpressionUUID->"4534def2-5954-4ee2-8c5e-039990b45051"],
Cell[60082, 1350, 3393, 65, 1048, "Input",ExpressionUUID->"1804ae7b-f158-451c-a639-50f6ce16703d"],
Cell[63478, 1417, 3452, 65, 1048, "Input",ExpressionUUID->"e23780d9-3d52-4473-bcd5-2ce0b2d29971"],
Cell[66933, 1484, 160, 3, 47, "Text",ExpressionUUID->"7cba9324-9b35-47e8-b4e0-1d53b3dd79d6"],
Cell[67096, 1489, 3447, 66, 1048, "Input",ExpressionUUID->"6875a28c-07ae-4d4d-9bc3-323a5e243ffe"],
Cell[70546, 1557, 3497, 66, 1048, "Input",ExpressionUUID->"97a8629e-c605-4f85-aacd-167e3a3a2606"],
Cell[74046, 1625, 3507, 66, 1048, "Input",ExpressionUUID->"52c7abdf-d081-4872-9f0e-286f2980a417"],
Cell[77556, 1693, 3555, 66, 1048, "Input",ExpressionUUID->"0030af93-5ce1-4e79-87c0-3238a0f51466"],
Cell[81114, 1761, 147, 3, 47, "Text",ExpressionUUID->"6873e7fe-9e1b-4689-9160-161d79ba7153"],
Cell[81264, 1766, 3469, 66, 1048, "Input",ExpressionUUID->"b191f54f-e117-4cda-87b6-d880017900b6"],
Cell[84736, 1834, 3447, 66, 1048, "Input",ExpressionUUID->"ad05f08b-59a9-4d33-8647-d83cf5cdeb19"],
Cell[88186, 1902, 3549, 67, 1048, "Input",ExpressionUUID->"062639db-fcba-44f1-9f7f-1ac583f356d9"],
Cell[91738, 1971, 3526, 66, 1048, "Input",ExpressionUUID->"71c05522-cf0d-40cd-bf28-ffa7b02007e5"],
Cell[95267, 2039, 3507, 66, 1048, "Input",ExpressionUUID->"a1f70985-b5b5-4baa-82b7-2c0319aebb15"],
Cell[98777, 2107, 3606, 67, 1048, "Input",ExpressionUUID->"2515a265-a888-4d36-97c1-c9e9724a050d"],
Cell[102386, 2176, 144, 3, 47, "Text",ExpressionUUID->"2da9d9aa-c8b4-4f73-bb1a-7643c756ee4c"],
Cell[102533, 2181, 4373, 83, 1280, "Input",ExpressionUUID->"b301fb05-d5fc-474d-b4f0-d8bfb0665086"],
Cell[106909, 2266, 4403, 83, 1280, "Input",ExpressionUUID->"4cfa28a3-a20b-4fa8-bde2-d29902399eab"],
Cell[111315, 2351, 160, 3, 47, "Text",ExpressionUUID->"f4efdede-bb90-4c5e-ad48-40f23147dcb0"],
Cell[111478, 2356, 4423, 83, 1280, "Input",ExpressionUUID->"c723fd6a-02dd-4117-bec9-c6f3d1d13764"],
Cell[115904, 2441, 4473, 84, 1280, "Input",ExpressionUUID->"c4be4ecc-0068-400b-acf1-e74511b0d49e"],
Cell[120380, 2527, 4475, 84, 1280, "Input",ExpressionUUID->"18abf51b-e55d-4874-b847-f496a6a97a53"],
Cell[124858, 2613, 4459, 84, 1280, "Input",ExpressionUUID->"7156f778-9cc2-41bd-b2ec-747e5304295c"],
Cell[129320, 2699, 4509, 85, 1280, "Input",ExpressionUUID->"62b6c7dc-fe76-4155-ab3f-ca76875d5f5b"],
Cell[133832, 2786, 4511, 85, 1280, "Input",ExpressionUUID->"8d9665f7-fbdc-4359-9054-e6ddae42284c"],
Cell[138346, 2873, 149, 3, 47, "Text",ExpressionUUID->"7f9f00e7-7af9-4551-a543-0e7df8618346"],
Cell[138498, 2878, 4477, 84, 1280, "Input",ExpressionUUID->"4884657e-713a-45e8-8d1c-cce4aa316756"],
Cell[142978, 2964, 4527, 85, 1280, "Input",ExpressionUUID->"06ecc210-457c-48aa-a0fc-678020b34317"],
Cell[147508, 3051, 4529, 85, 1280, "Input",ExpressionUUID->"626d1df7-8927-417c-9018-6c30e04ec05b"],
Cell[152040, 3138, 4581, 86, 1280, "Input",ExpressionUUID->"f4fbf756-f266-415d-af6d-0eb6dec59007"],
Cell[156624, 3226, 4583, 86, 1280, "Input",ExpressionUUID->"c13f0503-0109-48dc-a1fb-036f598425d1"],
Cell[161210, 3314, 4581, 86, 1280, "Input",ExpressionUUID->"9fca9a94-75f1-45b1-8623-4f94d5a296b6"],
Cell[165794, 3402, 4511, 85, 1280, "Input",ExpressionUUID->"b6841918-2680-4431-9467-7309f927bb6b"],
Cell[170308, 3489, 4563, 86, 1280, "Input",ExpressionUUID->"553a060a-6fa2-4af0-9eb6-02aba8f3d9c9"],
Cell[174874, 3577, 4565, 86, 1280, "Input",ExpressionUUID->"19c88b5e-af2a-474e-bcfc-1937bf370849"],
Cell[179442, 3665, 4619, 87, 1280, "Input",ExpressionUUID->"e487d520-cc9a-42c4-a8e1-9e3fdcc71a0c"],
Cell[184064, 3754, 4621, 87, 1280, "Input",ExpressionUUID->"2942cf5e-34bf-4872-a557-c9b32baa9db1"],
Cell[188688, 3843, 4623, 88, 1280, "Input",ExpressionUUID->"57d5d4e0-f2ac-4d3e-90fb-7075a75e7934"]
}
]
*)

